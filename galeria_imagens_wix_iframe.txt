<iframe 
    srcdoc="<!DOCTYPE html>
<html lang=&quot;pt-BR&quot;>
<head>
    <meta charset=&quot;UTF-8&quot;>
    <meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;>
    <title>Galeria de Imagens</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            font-family: Arial, sans-serif;
            background: #f5f5f5;
            padding: 20px;
        }
        
        .gallery-container {
            max-width: 1200px;
            margin: 0 auto;
        }
        
        .loading {
            text-align: center;
            padding: 40px;
            font-size: 18px;
            color: #666;
        }
        
        .error {
            text-align: center;
            padding: 40px;
            color: #d32f2f;
            font-size: 16px;
        }
        
        .gallery-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
            gap: 20px;
            animation: fadeIn 0.5s ease-in;
        }
        
        @keyframes fadeIn {
            from {
                opacity: 0;
                transform: translateY(20px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }
        
        .image-item {
            position: relative;
            overflow: hidden;
            border-radius: 8px;
            background: #fff;
            box-shadow: 0 2px 8px rgba(0,0,0,0.1);
            transition: transform 0.3s ease, box-shadow 0.3s ease;
            cursor: pointer;
        }
        
        .image-item:hover {
            transform: translateY(-5px);
            box-shadow: 0 5px 20px rgba(0,0,0,0.2);
        }
        
        .image-item img {
            width: 100%;
            height: 200px;
            object-fit: cover;
            display: block;
        }
        
        .image-name {
            padding: 10px;
            font-size: 14px;
            color: #333;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
            background: #fff;
        }
        
        /* Modal para visualização em tela cheia */
        .modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0,0,0,0.9);
            z-index: 1000;
            cursor: pointer;
        }
        
        .modal-content {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            max-width: 90%;
            max-height: 90%;
        }
        
        .modal-content img {
            width: 100%;
            height: 100%;
            object-fit: contain;
        }
        
        .modal-close {
            position: absolute;
            top: 20px;
            right: 40px;
            color: #fff;
            font-size: 40px;
            font-weight: bold;
            cursor: pointer;
            z-index: 1001;
        }
        
        .modal-close:hover {
            color: #ccc;
        }
        
        /* Responsividade */
        @media (max-width: 768px) {
            .gallery-grid {
                grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
                gap: 15px;
            }
            
            .image-item img {
                height: 150px;
            }
            
            body {
                padding: 10px;
            }
        }
        
        @media (max-width: 480px) {
            .gallery-grid {
                grid-template-columns: repeat(auto-fill, minmax(120px, 1fr));
                gap: 10px;
            }
            
            .image-item img {
                height: 120px;
            }
            
            .image-name {
                font-size: 12px;
                padding: 8px;
            }
        }
    </style>
</head>
<body>
    <div class=&quot;gallery-container&quot;>
        <div id=&quot;loading&quot; class=&quot;loading&quot;>Carregando imagens...</div>
        <div id=&quot;error&quot; class=&quot;error&quot; style=&quot;display: none;&quot;></div>
        <div id=&quot;gallery&quot; class=&quot;gallery-grid&quot; style=&quot;display: none;&quot;></div>
    </div>
    
    <!-- Modal para visualização em tela cheia -->
    <div id=&quot;modal&quot; class=&quot;modal&quot;>
        <span class=&quot;modal-close&quot;>&times;</span>
        <div class=&quot;modal-content&quot;>
            <img id=&quot;modalImage&quot; src=&quot;&quot; alt=&quot;&quot;>
        </div>
    </div>

    <script>
        // Configurações
        const GITHUB_API_URL = 'https://api.github.com/repos/technosutra21/technosutra/contents/teachers-resource/imagens';
        const RAW_CONTENT_URL = 'https://raw.githubusercontent.com/technosutra21/technosutra/master/teachers-resource/imagens';
        
        // Elementos do DOM
        const loadingEl = document.getElementById('loading');
        const errorEl = document.getElementById('error');
        const galleryEl = document.getElementById('gallery');
        const modal = document.getElementById('modal');
        const modalImage = document.getElementById('modalImage');
        const modalClose = document.querySelector('.modal-close');
        
        // Extensões de imagem suportadas
        const imageExtensions = ['.jpg', '.jpeg', '.png', '.gif', '.webp', '.svg'];
        
        // Função para verificar se é uma imagem
        function isImage(filename) {
            const lowerName = filename.toLowerCase();
            return imageExtensions.some(ext => lowerName.endsWith(ext));
        }
        
        // Função para carregar imagens
        async function loadImages() {
            try {
                const response = await fetch(GITHUB_API_URL);
                
                if (!response.ok) {
                    throw new Error(`Erro ao buscar imagens: ${response.status}`);
                }
                
                const files = await response.json();
                
                // Filtrar apenas arquivos de imagem
                const imageFiles = files.filter(file => 
                    file.type === 'file' && isImage(file.name)
                );
                
                if (imageFiles.length === 0) {
                    showError('Nenhuma imagem encontrada na pasta.');
                    return;
                }
                
                // Renderizar galeria
                renderGallery(imageFiles);
                
            } catch (error) {
                console.error('Erro ao carregar imagens:', error);
                showError('Erro ao carregar imagens. Por favor, tente novamente.');
            }
        }
        
        // Função para renderizar a galeria
        function renderGallery(images) {
            galleryEl.innerHTML = '';
            
            images.forEach(image => {
                const imageUrl = `${RAW_CONTENT_URL}/${image.name}`;
                
                const imageItem = document.createElement('div');
                imageItem.className = 'image-item';
                imageItem.innerHTML = `
                    <img src=&quot;${imageUrl}&quot; alt=&quot;${image.name}&quot; loading=&quot;lazy&quot;>
                    <div class=&quot;image-name&quot;>${image.name}</div>
                `;
                
                // Adicionar evento de clique para abrir modal
                imageItem.addEventListener('click', () => openModal(imageUrl, image.name));
                
                galleryEl.appendChild(imageItem);
            });
            
            // Mostrar galeria e esconder loading
            loadingEl.style.display = 'none';
            galleryEl.style.display = 'grid';
        }
        
        // Função para mostrar erro
        function showError(message) {
            loadingEl.style.display = 'none';
            errorEl.textContent = message;
            errorEl.style.display = 'block';
        }
        
        // Funções do modal
        function openModal(imageUrl, imageName) {
            modalImage.src = imageUrl;
            modalImage.alt = imageName;
            modal.style.display = 'block';
            document.body.style.overflow = 'hidden';
        }
        
        function closeModal() {
            modal.style.display = 'none';
            document.body.style.overflow = 'auto';
            modalImage.src = '';
        }
        
        // Event listeners do modal
        modalClose.addEventListener('click', closeModal);
        modal.addEventListener('click', (e) => {
            if (e.target === modal) {
                closeModal();
            }
        });
        
        // Tecla ESC para fechar modal
        document.addEventListener('keydown', (e) => {
            if (e.key === 'Escape' && modal.style.display === 'block') {
                closeModal();
            }
        });
        
        // Carregar imagens ao iniciar
        loadImages();
        
        // Recarregar imagens a cada 5 minutos (opcional)
        // setInterval(loadImages, 300000);
    </script>
</body>
</html>" 
    style="width: 100%; height: 600px; border: none; display: block;"
    allowfullscreen>
</iframe>
